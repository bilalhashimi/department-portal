# Generated by Django 4.2.21 on 2025-05-29 21:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import documents.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=documents.models.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'rtf', 'odt', 'ods', 'odp', 'csv', 'md'])])),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('approved', 'Approved'), ('published', 'Published'), ('archived', 'Archived'), ('obsolete', 'Obsolete')], default='draft', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('is_latest_version', models.BooleanField(default=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'documents_document',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('color', models.CharField(default='#6B7280', help_text='Hex color code for tag', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Document Tag',
                'verbose_name_plural': 'Document Tags',
                'db_table': 'documents_documenttag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission', models.CharField(choices=[('view', 'View'), ('download', 'Download'), ('edit', 'Edit'), ('delete', 'Delete'), ('share', 'Share')], max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_permissions', to='departments.department')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='documents.document')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Permission',
                'verbose_name_plural': 'Document Permissions',
                'db_table': 'documents_documentpermission',
            },
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_comments', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='documents.document')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='documents.documentcomment')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Comment',
                'verbose_name_plural': 'Document Comments',
                'db_table': 'documents_documentcomment',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for category', max_length=7)),
                ('icon', models.CharField(default='folder', help_text='Icon name for category', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_categories', to='departments.department')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='documents.documentcategory')),
            ],
            options={
                'verbose_name': 'Document Category',
                'verbose_name_plural': 'Document Categories',
                'db_table': 'documents_documentcategory',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('created', 'Created'), ('viewed', 'Viewed'), ('downloaded', 'Downloaded'), ('edited', 'Edited'), ('deleted', 'Deleted'), ('shared', 'Shared'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('published', 'Published'), ('archived', 'Archived')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('previous_version', models.CharField(blank=True, max_length=20)),
                ('new_version', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='documents.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Activity',
                'verbose_name_plural': 'Document Activities',
                'db_table': 'documents_documentactivity',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='documents.documentcategory'),
        ),
        migrations.AddField(
            model_name='document',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='owned_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newer_versions', to='documents.document'),
        ),
        migrations.AddField(
            model_name='document',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents_to_review', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='document',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='documents', to='documents.documenttag'),
        ),
        migrations.AddConstraint(
            model_name='documentpermission',
            constraint=models.CheckConstraint(check=models.Q(('user__isnull', False), ('department__isnull', False), _connector='OR'), name='either_user_or_department'),
        ),
        migrations.AddIndex(
            model_name='documentactivity',
            index=models.Index(fields=['document'], name='documents_d_documen_72d411_idx'),
        ),
        migrations.AddIndex(
            model_name='documentactivity',
            index=models.Index(fields=['user'], name='documents_d_user_id_445354_idx'),
        ),
        migrations.AddIndex(
            model_name='documentactivity',
            index=models.Index(fields=['action'], name='documents_d_action_79226c_idx'),
        ),
        migrations.AddIndex(
            model_name='documentactivity',
            index=models.Index(fields=['created_at'], name='documents_d_created_9e08de_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status'], name='documents_d_status_07369e_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['category'], name='documents_d_categor_fec314_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['created_by'], name='documents_d_created_54b6f7_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['created_at'], name='documents_d_created_3b0a51_idx'),
        ),
    ]
